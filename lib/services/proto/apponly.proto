syntax = "proto3";

option java_package = "com.geeksville.mesh";
option optimize_for = LITE_RUNTIME;

import "mesh.proto";
import "channel.proto";

option java_outer_classname = "AppOnlyProtos";

/*
 * This message wraps a MeshPacket with extra metadata about the sender and how it arrived.
 */
message ServiceEnvelope {
    /*
     * The (probably encrypted) packet
     */
    MeshPacket packet = 1;

    /*
     * The global channel ID it was sent on
     */
    string channel_id = 2;

    /*
     * The sending gateway. Can we use this to authenticate/prevent fake
     * nodeid impersonation for senders? - i.e. use gateway/mesh id (which is authenticated) + local node id as
     * the globally trusted nodenum
     */
    string gateway_id = 3;
}

/*
 * This is the most compact possible representation for a set of channels.  It includes only one PRIMARY channel (which must be first) and
 * any SECONDARY channels.  No DISABLED channels are included.
 * This abstraction is used only on the the 'app side' of the world (ie python, javascript and android etc) to show a group of Channels as a (long) URL
 */
message ChannelSet {
    repeated ChannelSettings settings = 1;
}